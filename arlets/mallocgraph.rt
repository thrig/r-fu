# malloc.c output for 1..64 threads doing memsets 100 times, over 2**16 to
# 2**37 worth of memory divided among that many threads. The resulting
# images then tiled together using Imager::Tiler.
#
#   for ms in `seq 16 37`; do ( for t in `seq 1 64`; do ./malloc -l -c 100 -m $((2**$ms)) -t $t > result.$t; echo -n "$t "; r-fu msdevreduce result.$t ; done; ) > stats.$ms; done
#   for x in `seq 16 37`; do r-fu graph stats.$x $x.png $(echo $((2**$x)) | humanize); done
#
# TODO title for graph would be nice but eh

png(file="<: $args[1] :>", bg="white", width=<: $width :>, height=<: $height :>);

foo=read.table("<: $args[0] :>");

par(mar=c(2,3,0.9,0.9) + 0.1);
plot(foo$V2,type='h',pch=20,log='y',ylab='',xlab='',xaxt='n',yaxt='n',bty='n',lwd=2)
tp=c(1,2,4,8,12,16,24,32,40,48,64);
axis(side=1, at=tp,tcl=-0.25);

# as otherwise R puts the label waaaay too far off the axis, no idea how to
# adjust that tighter and this Does The Job(TM)
mtext("<: $args[2] :>",side=2,cex=1.5);

dev.off();
